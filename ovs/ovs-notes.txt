Here are some notes on coding against Open vSwitch.

- Compiling Open vSwitch, see thesis notes.
  Was really no problem. The codebase is really clean and it seems they've
  spent a lot of time making a really source distribution.

- Using the logger

  #include "vlog.h"
  VLOG_FATAL("bla bla %s", ovs_strerror(errno));

- I'm working on origin/branch-2.1.
  There is a newer one in HEAD, but I want to code against a stable version.

- Here are dev notes from ovs:
  http://openvswitch.org/development/

- Some personal dev notes from a guy:
  https://github.com/ljakab/openvswitch/wiki/Development-notes

- The wiki pages contain useful info
  https://github.com/ljakab/openvswitch/wiki/_pages

- Placed where openflow may be implemented:

  $ grep -RI openflow\\.h * | grep \\.c | cut -f1 -d: | sort | uniq
  lib/flow.c
  lib/learn.c
  lib/learning-switch.c
  lib/netdev-bsd.c
  lib/netdev.c
  lib/netdev-linux.c
  lib/ofp-errors.c
  lib/ofp-msgs.c
  lib/ofp-parse.c
  lib/ofp-print.c
  lib/rconn.c
  lib/stream.c
  lib/stream-ssl.c
  lib/vconn.c
  lib/vconn-stream.c
  ofproto/in-band.c
  ofproto/ofproto.c
  ofproto/pinsched.c
  tests/test-controller.c
  tests/test-flows.c
  tests/test-vconn.c
  utilities/ovs-ofctl.c
  vswitchd/ovs-vswitchd.c

- More on files

- The file ofproto/ofproto.c has defs for OpenFlow such as
  OFOPERATION_ADD, etc. Seems this is a good starting point for extending
  the ovs part of ofp.

- Also, grep for "ofproto_mutex", because it's a global lock (mutex) that
  protects all flow table operations! :)

- ... which leads to this very nice list:

  $ grep -RI ofproto_mutex | cut -f1 -d: | sort | uniq
  lib/classifier.h
  ofproto/connmgr.c
  ofproto/connmgr.h
  ofproto/fail-open.c
  ofproto/ofproto.c
  ofproto/ofproto-dpif.c
  ofproto/ofproto-provider.h

- indeed, most of OpenFlow is implemented in ofproto/ofproto.c
- they use C90 (aka C89), so be sure to follow that
- if you make new .c files, you MUST incude <config.h> per build rules,
  and to automatically build, add them to automake.mk

