#!/usr/bin/env python

"""Sends a raw Ethernet packet on the net.
You need root rights to do so, so use

    $ sudo send-eth 11:22:33:44:55:66 aa:bb:cc:dd:ee:ff 'Hello, world!'

to send packets.
"""

import sys
from socket import *
from paxos.ethernet import mac2str, type2str, parse_mac, parse_type

def help():
  print("Usage: send-eth [source] [dest] [eth type] [interface] [payload]")
  print("")
  print("Example:")
  print("  $ sudo ./send-eth 11:22:33:44:55:66 aa:bb:cc:dd:ee:ff 0x7A05 eth0 'Hello, world!'")
  print("  11:22:33:44:55:66 -> aa:bb:cc:dd:ee:ff type=0x7a05 if=eth0 msglen=13")
  print("  Sent 27 bytes on eth0")
  print("")
  print("You need sudo rights to send raw Ethernet packets.")
  print("")

def sendeth(src, dst, eth_type, payload, interface = "eth0"):
  """Send raw Ethernet packet on interface."""

  assert(len(src) == len(dst) == 6) # 48-bit ethernet addresses
  assert(len(eth_type) == 2) # 16-bit ethernet type

  s = socket(AF_PACKET, SOCK_RAW)

  # From the docs: "For raw packet
  # sockets the address is a tuple (ifname, proto [,pkttype [,hatype]])"
  s.bind((interface, 0))
  return s.send(src + dst + eth_type + payload)

if __name__ == "__main__":
  if len(sys.argv) < 6:
    help()
    sys.exit(1)

  try:
    src = parse_mac(sys.argv[1])
    dst = parse_mac(sys.argv[2])
    typ = parse_type(sys.argv[3])
    ifc = sys.argv[4]
    msg = sys.argv[5]

    print("{} -> {} type={} if={} msglen={}".format(
      mac2str(src), mac2str(dst), type2str(typ), ifc, len(msg)))

    ret = sendeth(src, dst, str(typ), msg, ifc)
    print("Sent {} bytes on {}".format(ret, ifc))
  except Exception, e:
    print("Error: {}".format(e))
