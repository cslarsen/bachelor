#!/usr/bin/python

"""
Send an UDP message, wait for reply, print and exit.
"""

import socket
import sys

from paxos.udp import UDP

def getlines(file):
  if file == sys.stdin:
    print("Reading data from stdin")
  return "".join(file.readlines())

def send(host, port, reply, data, timeout=5):
  u = UDP(timeout=timeout)
  b = u.sendto((host, port), data)
  print("Sent %d/%d bytes to %s:%d from %s:%d" %
        (b, len(data), host, port, u.ip, u.port))
  if reply:
    try:
      print("Waiting %d secs for reply" % timeout)
      sys.stdout.flush()
      resp, (rip, rport) = u.recvfrom()
      print("%s:%d says: %s" % (rip, rport, resp.rstrip()))
      sys.stdout.flush()
    except KeyboardInterrupt:
      print("")
    except socket.timeout:
      print("Reply timed out")
      pass
  return 0

def usage():
  print("Usage: send-udp [-r] [-wN] IP PORT")
  print("Sends UDP message from stdin to IP:PORT.")
  print("")
  print("If -r flag is set, wait for response and print.")
  print("If -wN is set, wait N seconds (no spaces, please).")
  print("")
  print("Example:\n  echo howdy | send-udp -r -w10 127.0.0.1 1234\n")
  sys.exit(1)

if __name__ == "__main__":
  args = sys.argv[1:]

  if len(args) < 2:
    usage()

  host = None
  port = None
  reply = False
  timeout = 5
  for arg in args:
    if arg == "-r":
      reply = True
    elif arg.startswith("-w"):
      timeout = int(arg[2:])
    elif host is None:
      host = arg
    elif port is None:
      port = int(arg)

  if host is None or port is None:
    usage()

  sys.exit(send(host, port, reply, getlines(sys.stdin), timeout))
